{
  "{\"sourceRoot\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"filename\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\n\nvar usersRouter = require('./routes/users');\n\nvar regionsRouter = require('./routes/regions');\n\nvar annotationsRouter = require('./routes/annotations');\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', \"*\");\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/regions', regionsRouter);\napp.use('/annotations', annotationsRouter); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJyZWdpb25zUm91dGVyIiwiYW5ub3RhdGlvbnNSb3V0ZXIiLCJhcHAiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInN0YXRpYyIsInJlcSIsInJlcyIsIm5leHQiLCJoZWFkZXIiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJzdGF0dXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLElBQUlJLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsSUFBSUssV0FBVyxHQUFHTCxPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBSU0sV0FBVyxHQUFHTixPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBSU8sYUFBYSxHQUFHUCxPQUFPLENBQUMsa0JBQUQsQ0FBM0I7O0FBQ0EsSUFBSVEsaUJBQWlCLEdBQUdSLE9BQU8sQ0FBQyxzQkFBRCxDQUEvQjs7QUFFQSxJQUFJUyxHQUFHLEdBQUdSLE9BQU8sRUFBakIsQyxDQUVBOztBQUNBUSxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCUixJQUFJLENBQUNTLElBQUwsQ0FBVUMsU0FBVixFQUFxQixPQUFyQixDQUFqQjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBRUFELEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxNQUFNLENBQUMsS0FBRCxDQUFkO0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUVosT0FBTyxDQUFDYyxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFDQVAsR0FBRyxDQUFDSSxHQUFKLENBQVFWLFlBQVksRUFBcEI7QUFDQU0sR0FBRyxDQUFDSSxHQUFKLENBQVFaLE9BQU8sQ0FBQ2dCLE1BQVIsQ0FBZWYsSUFBSSxDQUFDUyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQTBDLEdBQTFDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDhCQUFYLEVBQTJDLHFCQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxjQUEzQztBQUNBRCxFQUFBQSxJQUFJO0FBQ0wsQ0FMRDtBQU9BWCxHQUFHLENBQUNJLEdBQUosQ0FBUSxHQUFSLEVBQWFSLFdBQWI7QUFDQUksR0FBRyxDQUFDSSxHQUFKLENBQVEsUUFBUixFQUFrQlAsV0FBbEI7QUFDQUcsR0FBRyxDQUFDSSxHQUFKLENBQVEsVUFBUixFQUFvQk4sYUFBcEI7QUFDQUUsR0FBRyxDQUFDSSxHQUFKLENBQVEsY0FBUixFQUF3QkwsaUJBQXhCLEUsQ0FFQTs7QUFDQUMsR0FBRyxDQUFDSSxHQUFKLENBQVEsVUFBU0ssR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUMvQkEsRUFBQUEsSUFBSSxDQUFDckIsV0FBVyxDQUFDLEdBQUQsQ0FBWixDQUFKO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FVLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNTLEdBQVQsRUFBY0osR0FBZCxFQUFtQkMsR0FBbkIsRUFBd0JDLElBQXhCLEVBQThCO0FBQ3BDO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxPQUFYLEdBQXFCRixHQUFHLENBQUNFLE9BQXpCO0FBQ0FMLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXRSxLQUFYLEdBQW1CUCxHQUFHLENBQUNULEdBQUosQ0FBUWlCLEdBQVIsQ0FBWSxLQUFaLE1BQXVCLGFBQXZCLEdBQXVDSixHQUF2QyxHQUE2QyxFQUFoRSxDQUhvQyxDQUtwQzs7QUFDQUgsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVdMLEdBQUcsQ0FBQ0ssTUFBSixJQUFjLEdBQXpCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLE9BQVg7QUFDRCxDQVJEO0FBVUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kaWFuZS9Eb2N1bWVudHMvR2l0SHViL2Zsb3JlbnRpbmVDb2RleC9pbWFnZV90b29scy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCdodHRwLWVycm9ycycpO1xudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7XG52YXIgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5cbnZhciBpbmRleFJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4Jyk7XG52YXIgdXNlcnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VycycpO1xudmFyIHJlZ2lvbnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9yZWdpb25zJyk7XG52YXIgYW5ub3RhdGlvbnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9hbm5vdGF0aW9ucycpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpO1xuXG4vLyB2aWV3IGVuZ2luZSBzZXR1cFxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdwdWcnKTtcblxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xuYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCBcIipcIik7XG4gIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULFBVVCxQT1NULERFTEVURScpO1xuICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ0NvbnRlbnQtVHlwZScpO1xuICBuZXh0KCk7XG59KTtcblxuYXBwLnVzZSgnLycsIGluZGV4Um91dGVyKTtcbmFwcC51c2UoJy91c2VycycsIHVzZXJzUm91dGVyKTtcbmFwcC51c2UoJy9yZWdpb25zJywgcmVnaW9uc1JvdXRlcik7XG5hcHAudXNlKCcvYW5ub3RhdGlvbnMnLCBhbm5vdGF0aW9uc1JvdXRlcik7XG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIG5leHQoY3JlYXRlRXJyb3IoNDA0KSk7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XG4gIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XG5cbiAgLy8gcmVuZGVyIHRoZSBlcnJvciBwYWdlXG4gIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xuICByZXMucmVuZGVyKCdlcnJvcicpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "indexRouter",
        "usersRouter",
        "regionsRouter",
        "annotationsRouter",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "req",
        "res",
        "next",
        "header",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,kBAAD,CAA3B;;AACA,IAAIQ,iBAAiB,GAAGR,OAAO,CAAC,sBAAD,CAA/B;;AAEA,IAAIS,GAAG,GAAGR,OAAO,EAAjB,C,CAEA;;AACAQ,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBR,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AACAK,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQV,YAAY,EAApB;AACAM,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACgB,MAAR,CAAef,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAH,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,qBAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,cAA3C;AACAD,EAAAA,IAAI;AACL,CALD;AAOAX,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaR,WAAb;AACAI,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkBP,WAAlB;AACAG,GAAG,CAACI,GAAJ,CAAQ,UAAR,EAAoBN,aAApB;AACAE,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBL,iBAAxB,E,CAEA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACrB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAU,GAAG,CAACI,GAAJ,CAAQ,UAASS,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACI,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAL,EAAAA,GAAG,CAACI,MAAJ,CAAWE,KAAX,GAAmBP,GAAG,CAACT,GAAJ,CAAQiB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAH,EAAAA,GAAG,CAACQ,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAR,EAAAA,GAAG,CAACS,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBrB,GAAjB",
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/",
      "sourcesContent": [
        "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar regionsRouter = require('./routes/regions');\nvar annotationsRouter = require('./routes/annotations');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(function(req, res, next) {\n  res.header('Access-Control-Allow-Origin', \"*\");\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/regions', regionsRouter);\napp.use('/annotations', annotationsRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611866261007
  },
  "{\"sourceRoot\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"filename\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGlhbmUvRG9jdW1lbnRzL0dpdEh1Yi9mbG9yZW50aW5lQ29kZXgvaW1hZ2VfdG9vbHMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611866261727
  },
  "{\"sourceRoot\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"filename\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7QUFFQTs7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3ZDRCxFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyx5QkFBVDtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGlhbmUvRG9jdW1lbnRzL0dpdEh1Yi9mbG9yZW50aW5lQ29kZXgvaW1hZ2VfdG9vbHMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCB1c2VycyBsaXN0aW5nLiAqL1xucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.send('respond with a resource');\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611866261727
  },
  "{\"sourceRoot\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"filename\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/regions.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/regions.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/regions.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/regions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
        "sourceFileName": "regions.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst low = require('lowdb');\n\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\ndb.defaults({\n  annotations: []\n}).write();\n/* add an annotation. */\n\nrouter.post('/', function (req, res, next) {\n  const newAnno = {\n    id: req.body['@id'],\n    content: req.body,\n    target_canvas: req.body.on[0].full,\n    within: req.body.on[0].within['@id']\n  };\n  const result = db.get('annotations').push(newAnno).write().find(anno => anno.id === newAnno.id);\n  res.send(result);\n});\n/* GET all annotations. */\n\nrouter.get('/', function (req, res, next) {\n  // If there are query parameters, look for\n  // annotations on a specific canvas.\n  if (req.query.target_canvas) {\n    const target_canvas = decodeURIComponent(req.query.target_canvas);\n    const result = db.get('annotations').value().filter(annotation => {\n      return annotation.target_canvas ? annotation.target_canvas === target_canvas : false;\n    }).map(anno => anno.content);\n    res.send(result);\n    return;\n  }\n\n  const result = db.get('annotations');\n  res.send(result);\n});\n/* GET annotations with a specific ID */\n\nrouter.get('/:uid', function (req, res, next) {\n  const id = req.params.uid; // select the canvas id out of the get query parameter\n\n  const result = db.get('annotations').find(anno => anno.id === id).value();\n  res.send(result);\n});\n/* update annotation. */\n\nrouter.put('/:uid', function (req, res, next) {\n  const id = req.params.uid;\n  const newAnno = {\n    id: req.body['@id'],\n    content: req.body,\n    target_canvas: req.body.on[0].full,\n    within: req.body.on[0].within['@id']\n  }; // select the annotation id out of the query parameters\n\n  const result = db.get('annotations').find({\n    id: id\n  }).assign(newAnno).write();\n  res.send(result);\n});\n/* delete annotation. */\n\nrouter.delete('/:uid', function (req, res, next) {\n  const id = req.params.uid; // select out the annotation ID to address it\n\n  const result = db.get('annotations').remove({\n    id: id\n  }).write();\n  res.send(result);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lvbnMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJsb3ciLCJGaWxlU3luYyIsImFkYXB0ZXIiLCJkYiIsImRlZmF1bHRzIiwiYW5ub3RhdGlvbnMiLCJ3cml0ZSIsInBvc3QiLCJyZXEiLCJyZXMiLCJuZXh0IiwibmV3QW5ubyIsImlkIiwiYm9keSIsImNvbnRlbnQiLCJ0YXJnZXRfY2FudmFzIiwib24iLCJmdWxsIiwid2l0aGluIiwicmVzdWx0IiwiZ2V0IiwicHVzaCIsImZpbmQiLCJhbm5vIiwic2VuZCIsInF1ZXJ5IiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidmFsdWUiLCJmaWx0ZXIiLCJhbm5vdGF0aW9uIiwibWFwIiwicGFyYW1zIiwidWlkIiwicHV0IiwiYXNzaWduIiwiZGVsZXRlIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiOztBQUNBLE1BQU1DLEdBQUcsR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsTUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMseUJBQUQsQ0FBeEI7O0FBQ0EsTUFBTUssT0FBTyxHQUFHLElBQUlELFFBQUosQ0FBYSxTQUFiLENBQWhCO0FBQ0EsTUFBTUUsRUFBRSxHQUFHSCxHQUFHLENBQUNFLE9BQUQsQ0FBZDtBQUVBQyxFQUFFLENBQUNDLFFBQUgsQ0FBWTtBQUFFQyxFQUFBQSxXQUFXLEVBQUU7QUFBZixDQUFaLEVBQ0dDLEtBREg7QUFHQTs7QUFDQVIsTUFBTSxDQUFDUyxJQUFQLENBQVksR0FBWixFQUFpQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3hDLFFBQU1DLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxFQUFFLEVBQUVK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OztBQUNBLFFBQU1DLE1BQU0sR0FBR2hCLEVBQUUsQ0FBQ2lCLEdBQUgsQ0FBTyxhQUFQLEVBQ1JFLElBRFEsQ0FDSDtBQUFFVixJQUFBQSxFQUFFLEVBQUVBO0FBQU4sR0FERyxFQUVSc0IsTUFGUSxDQUVEdkIsT0FGQyxFQUdaTCxLQUhZLEVBQWY7QUFLQUcsRUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNMLE1BQVQ7QUFDRCxDQWhCRDtBQWtCQTs7QUFDQXJCLE1BQU0sQ0FBQ3FDLE1BQVAsQ0FBYyxPQUFkLEVBQXVCLFVBQVMzQixHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQzlDLFFBQU1FLEVBQUUsR0FBR0osR0FBRyxDQUFDdUIsTUFBSixDQUFXQyxHQUF0QixDQUQ4QyxDQUU5Qzs7QUFDQSxRQUFNYixNQUFNLEdBQUdoQixFQUFFLENBQUNpQixHQUFILENBQU8sYUFBUCxFQUFzQmdCLE1BQXRCLENBQTZCO0FBQUV4QixJQUFBQSxFQUFFLEVBQUVBO0FBQU4sR0FBN0IsRUFBeUNOLEtBQXpDLEVBQWY7QUFDQUcsRUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNMLE1BQVQ7QUFDRCxDQUxEO0FBT0FrQixNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGlhbmUvRG9jdW1lbnRzL0dpdEh1Yi9mbG9yZW50aW5lQ29kZXgvaW1hZ2VfdG9vbHMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBsb3cgPSByZXF1aXJlKCdsb3dkYicpO1xuY29uc3QgRmlsZVN5bmMgPSByZXF1aXJlKCdsb3dkYi9hZGFwdGVycy9GaWxlU3luYycpO1xuY29uc3QgYWRhcHRlciA9IG5ldyBGaWxlU3luYygnZGIuanNvbicpO1xuY29uc3QgZGIgPSBsb3coYWRhcHRlcik7XG5cbmRiLmRlZmF1bHRzKHsgYW5ub3RhdGlvbnM6IFtdIH0pXG4gIC53cml0ZSgpO1xuXG4vKiBhZGQgYW4gYW5ub3RhdGlvbi4gKi9cbnJvdXRlci5wb3N0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgY29uc3QgbmV3QW5ubyA9IHtcbiAgICBpZDogcmVxLmJvZHlbJ0BpZCddLFxuICAgIGNvbnRlbnQ6IHJlcS5ib2R5LFxuICAgIHRhcmdldF9jYW52YXM6IHJlcS5ib2R5Lm9uWzBdLmZ1bGwsXG4gICAgd2l0aGluOiByZXEuYm9keS5vblswXS53aXRoaW5bJ0BpZCddXG4gIH07XG4gIGNvbnN0IHJlc3VsdCA9IGRiLmdldCgnYW5ub3RhdGlvbnMnKVxuICAgICAgICAucHVzaChuZXdBbm5vKVxuICAgICAgICAud3JpdGUoKS5maW5kKGFubm8gPT4gYW5uby5pZCA9PT0gbmV3QW5uby5pZCk7XG5cbiAgcmVzLnNlbmQocmVzdWx0KTtcbn0pO1xuXG4vKiBHRVQgYWxsIGFubm90YXRpb25zLiAqL1xucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIC8vIElmIHRoZXJlIGFyZSBxdWVyeSBwYXJhbWV0ZXJzLCBsb29rIGZvclxuICAvLyBhbm5vdGF0aW9ucyBvbiBhIHNwZWNpZmljIGNhbnZhcy5cbiAgaWYgKHJlcS5xdWVyeS50YXJnZXRfY2FudmFzKSB7XG4gICAgY29uc3QgdGFyZ2V0X2NhbnZhcyA9IGRlY29kZVVSSUNvbXBvbmVudChyZXEucXVlcnkudGFyZ2V0X2NhbnZhcyk7XG4gICAgY29uc3QgcmVzdWx0ID0gZGIuZ2V0KCdhbm5vdGF0aW9ucycpLnZhbHVlKCkuZmlsdGVyKGFubm90YXRpb24gPT4ge1xuICAgICAgcmV0dXJuIGFubm90YXRpb24udGFyZ2V0X2NhbnZhcyA/XG4gICAgICAgIChhbm5vdGF0aW9uLnRhcmdldF9jYW52YXMgPT09IHRhcmdldF9jYW52YXMpIDogZmFsc2U7XG4gICAgfSkubWFwKGFubm8gPT4gYW5uby5jb250ZW50KTtcblxuICAgIHJlcy5zZW5kKHJlc3VsdCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgcmVzdWx0ID0gZGIuZ2V0KCdhbm5vdGF0aW9ucycpO1xuICByZXMuc2VuZChyZXN1bHQpO1xufSk7XG5cbi8qIEdFVCBhbm5vdGF0aW9ucyB3aXRoIGEgc3BlY2lmaWMgSUQgKi9cbnJvdXRlci5nZXQoJy86dWlkJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgY29uc3QgaWQgPSByZXEucGFyYW1zLnVpZDtcblxuICAvLyBzZWxlY3QgdGhlIGNhbnZhcyBpZCBvdXQgb2YgdGhlIGdldCBxdWVyeSBwYXJhbWV0ZXJcbiAgY29uc3QgcmVzdWx0ID0gZGIuZ2V0KCdhbm5vdGF0aW9ucycpLmZpbmQoYW5ubyA9PiBhbm5vLmlkID09PSBpZCkudmFsdWUoKTtcbiAgcmVzLnNlbmQocmVzdWx0KTtcbn0pO1xuXG5cbi8qIHVwZGF0ZSBhbm5vdGF0aW9uLiAqL1xucm91dGVyLnB1dCgnLzp1aWQnLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBjb25zdCBpZCA9IHJlcS5wYXJhbXMudWlkO1xuICBjb25zdCBuZXdBbm5vID0ge1xuICAgIGlkOiByZXEuYm9keVsnQGlkJ10sXG4gICAgY29udGVudDogcmVxLmJvZHksXG4gICAgdGFyZ2V0X2NhbnZhczogcmVxLmJvZHkub25bMF0uZnVsbCxcbiAgICB3aXRoaW46IHJlcS5ib2R5Lm9uWzBdLndpdGhpblsnQGlkJ11cbiAgfTtcblxuICAvLyBzZWxlY3QgdGhlIGFubm90YXRpb24gaWQgb3V0IG9mIHRoZSBxdWVyeSBwYXJhbWV0ZXJzXG4gIGNvbnN0IHJlc3VsdCA9IGRiLmdldCgnYW5ub3RhdGlvbnMnKVxuICAgICAgICAuZmluZCh7IGlkOiBpZCB9KVxuICAgICAgICAuYXNzaWduKG5ld0Fubm8pXG4gICAgLndyaXRlKCk7XG5cbiAgcmVzLnNlbmQocmVzdWx0KTtcbn0pO1xuXG4vKiBkZWxldGUgYW5ub3RhdGlvbi4gKi9cbnJvdXRlci5kZWxldGUoJy86dWlkJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgY29uc3QgaWQgPSByZXEucGFyYW1zLnVpZDtcbiAgLy8gc2VsZWN0IG91dCB0aGUgYW5ub3RhdGlvbiBJRCB0byBhZGRyZXNzIGl0XG4gIGNvbnN0IHJlc3VsdCA9IGRiLmdldCgnYW5ub3RhdGlvbnMnKS5yZW1vdmUoeyBpZDogaWQgfSkud3JpdGUoKTtcbiAgcmVzLnNlbmQocmVzdWx0KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "regions.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "low",
        "FileSync",
        "adapter",
        "db",
        "defaults",
        "annotations",
        "write",
        "post",
        "req",
        "res",
        "next",
        "newAnno",
        "id",
        "body",
        "content",
        "target_canvas",
        "on",
        "full",
        "within",
        "result",
        "get",
        "push",
        "find",
        "anno",
        "send",
        "query",
        "decodeURIComponent",
        "value",
        "filter",
        "annotation",
        "map",
        "params",
        "uid",
        "put",
        "assign",
        "delete",
        "remove",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\nconst low = require('lowdb');\nconst FileSync = require('lowdb/adapters/FileSync');\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\n\ndb.defaults({ annotations: [] })\n  .write();\n\n/* add an annotation. */\nrouter.post('/', function(req, res, next) {\n  const newAnno = {\n    id: req.body['@id'],\n    content: req.body,\n    target_canvas: req.body.on[0].full,\n    within: req.body.on[0].within['@id']\n  };\n  const result = db.get('annotations')\n        .push(newAnno)\n        .write().find(anno => anno.id === newAnno.id);\n\n  res.send(result);\n});\n\n/* GET all annotations. */\nrouter.get('/', function(req, res, next) {\n  // If there are query parameters, look for\n  // annotations on a specific canvas.\n  if (req.query.target_canvas) {\n    const target_canvas = decodeURIComponent(req.query.target_canvas);\n    const result = db.get('annotations').value().filter(annotation => {\n      return annotation.target_canvas ?\n        (annotation.target_canvas === target_canvas) : false;\n    }).map(anno => anno.content);\n\n    res.send(result);\n    return;\n  }\n\n  const result = db.get('annotations');\n  res.send(result);\n});\n\n/* GET annotations with a specific ID */\nrouter.get('/:uid', function(req, res, next) {\n  const id = req.params.uid;\n\n  // select the canvas id out of the get query parameter\n  const result = db.get('annotations').find(anno => anno.id === id).value();\n  res.send(result);\n});\n\n\n/* update annotation. */\nrouter.put('/:uid', function(req, res, next) {\n  const id = req.params.uid;\n  const newAnno = {\n    id: req.body['@id'],\n    content: req.body,\n    target_canvas: req.body.on[0].full,\n    within: req.body.on[0].within['@id']\n  };\n\n  // select the annotation id out of the query parameters\n  const result = db.get('annotations')\n        .find({ id: id })\n        .assign(newAnno)\n    .write();\n\n  res.send(result);\n});\n\n/* delete annotation. */\nrouter.delete('/:uid', function(req, res, next) {\n  const id = req.params.uid;\n  // select out the annotation ID to address it\n  const result = db.get('annotations').remove({ id: id }).write();\n  res.send(result);\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611866261727
  },
  "{\"sourceRoot\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"filename\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/annotations.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/diane/Documents/GitHub/florentineCodex/image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/annotations.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/diane/Documents/GitHub/florentineCodex/image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/annotations.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/annotations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
        "sourceFileName": "annotations.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst low = require('lowdb');\n\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\ndb.defaults({\n  annotations: []\n}).write();\n/* GET all annotations. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('annotations', {\n    title: 'annotations'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFubm90YXRpb25zLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibG93IiwiRmlsZVN5bmMiLCJhZGFwdGVyIiwiZGIiLCJkZWZhdWx0cyIsImFubm90YXRpb25zIiwid3JpdGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVuZGVyIiwidGl0bGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFDQSxNQUFNSSxRQUFRLEdBQUdKLE9BQU8sQ0FBQyx5QkFBRCxDQUF4Qjs7QUFDQSxNQUFNSyxPQUFPLEdBQUcsSUFBSUQsUUFBSixDQUFhLFNBQWIsQ0FBaEI7QUFDQSxNQUFNRSxFQUFFLEdBQUdILEdBQUcsQ0FBQ0UsT0FBRCxDQUFkO0FBRUFDLEVBQUUsQ0FBQ0MsUUFBSCxDQUFZO0FBQUVDLEVBQUFBLFdBQVcsRUFBRTtBQUFmLENBQVosRUFDR0MsS0FESDtBQUdBOztBQUNBUixNQUFNLENBQUNTLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDckNELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGFBQVgsRUFBMEI7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBMUI7QUFDSCxDQUZEO0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kaWFuZS9Eb2N1bWVudHMvR2l0SHViL2Zsb3JlbnRpbmVDb2RleC9pbWFnZV90b29scy9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGxvdyA9IHJlcXVpcmUoJ2xvd2RiJyk7XG5jb25zdCBGaWxlU3luYyA9IHJlcXVpcmUoJ2xvd2RiL2FkYXB0ZXJzL0ZpbGVTeW5jJyk7XG5jb25zdCBhZGFwdGVyID0gbmV3IEZpbGVTeW5jKCdkYi5qc29uJyk7XG5jb25zdCBkYiA9IGxvdyhhZGFwdGVyKTtcblxuZGIuZGVmYXVsdHMoeyBhbm5vdGF0aW9uczogW10gfSlcbiAgLndyaXRlKCk7XG5cbi8qIEdFVCBhbGwgYW5ub3RhdGlvbnMuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICByZXMucmVuZGVyKCdhbm5vdGF0aW9ucycsIHsgdGl0bGU6ICdhbm5vdGF0aW9ucycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "annotations.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "low",
        "FileSync",
        "adapter",
        "db",
        "defaults",
        "annotations",
        "write",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,MAAMC,GAAG,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,yBAAD,CAAxB;;AACA,MAAMK,OAAO,GAAG,IAAID,QAAJ,CAAa,SAAb,CAAhB;AACA,MAAME,EAAE,GAAGH,GAAG,CAACE,OAAD,CAAd;AAEAC,EAAE,CAACC,QAAH,CAAY;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAZ,EACGC,KADH;AAGA;;AACAR,MAAM,CAACS,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACrCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,aAAX,EAA0B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA1B;AACH,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBhB,MAAjB",
      "sourceRoot": "/Users/diane/Documents/GitHub/florentineCodex/image_tools/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\nconst low = require('lowdb');\nconst FileSync = require('lowdb/adapters/FileSync');\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\n\ndb.defaults({ annotations: [] })\n  .write();\n\n/* GET all annotations. */\nrouter.get('/', function(req, res, next) {\n    res.render('annotations', { title: 'annotations' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611866261726
  }
}