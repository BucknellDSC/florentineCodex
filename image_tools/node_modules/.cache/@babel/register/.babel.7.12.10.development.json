{
  "{\"sourceRoot\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"filename\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\n\nvar usersRouter = require('./routes/users');\n\nvar regionsRouter = require('./routes/regions');\n\nvar annotationsRouter = require('./routes/annotations');\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', \"*\");\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/regions', regionsRouter);\napp.use('/annotations', annotationsRouter); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJyZWdpb25zUm91dGVyIiwiYW5ub3RhdGlvbnNSb3V0ZXIiLCJhcHAiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInN0YXRpYyIsInJlcSIsInJlcyIsIm5leHQiLCJoZWFkZXIiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJzdGF0dXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLElBQUlJLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsSUFBSUssV0FBVyxHQUFHTCxPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBSU0sV0FBVyxHQUFHTixPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBSU8sYUFBYSxHQUFHUCxPQUFPLENBQUMsa0JBQUQsQ0FBM0I7O0FBQ0EsSUFBSVEsaUJBQWlCLEdBQUdSLE9BQU8sQ0FBQyxzQkFBRCxDQUEvQjs7QUFFQSxJQUFJUyxHQUFHLEdBQUdSLE9BQU8sRUFBakIsQyxDQUVBOztBQUNBUSxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCUixJQUFJLENBQUNTLElBQUwsQ0FBVUMsU0FBVixFQUFxQixPQUFyQixDQUFqQjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBRUFELEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxNQUFNLENBQUMsS0FBRCxDQUFkO0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUVosT0FBTyxDQUFDYyxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFDQVAsR0FBRyxDQUFDSSxHQUFKLENBQVFWLFlBQVksRUFBcEI7QUFDQU0sR0FBRyxDQUFDSSxHQUFKLENBQVFaLE9BQU8sQ0FBQ2dCLE1BQVIsQ0FBZWYsSUFBSSxDQUFDUyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQTBDLEdBQTFDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDhCQUFYLEVBQTJDLHFCQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxjQUEzQztBQUNBRCxFQUFBQSxJQUFJO0FBQ0wsQ0FMRDtBQU9BWCxHQUFHLENBQUNJLEdBQUosQ0FBUSxHQUFSLEVBQWFSLFdBQWI7QUFDQUksR0FBRyxDQUFDSSxHQUFKLENBQVEsUUFBUixFQUFrQlAsV0FBbEI7QUFDQUcsR0FBRyxDQUFDSSxHQUFKLENBQVEsVUFBUixFQUFvQk4sYUFBcEI7QUFDQUUsR0FBRyxDQUFDSSxHQUFKLENBQVEsY0FBUixFQUF3QkwsaUJBQXhCLEUsQ0FFQTs7QUFDQUMsR0FBRyxDQUFDSSxHQUFKLENBQVEsVUFBU0ssR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUMvQkEsRUFBQUEsSUFBSSxDQUFDckIsV0FBVyxDQUFDLEdBQUQsQ0FBWixDQUFKO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FVLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNTLEdBQVQsRUFBY0osR0FBZCxFQUFtQkMsR0FBbkIsRUFBd0JDLElBQXhCLEVBQThCO0FBQ3BDO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxPQUFYLEdBQXFCRixHQUFHLENBQUNFLE9BQXpCO0FBQ0FMLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXRSxLQUFYLEdBQW1CUCxHQUFHLENBQUNULEdBQUosQ0FBUWlCLEdBQVIsQ0FBWSxLQUFaLE1BQXVCLGFBQXZCLEdBQXVDSixHQUF2QyxHQUE2QyxFQUFoRSxDQUhvQyxDQUtwQzs7QUFDQUgsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVdMLEdBQUcsQ0FBQ0ssTUFBSixJQUFjLEdBQXpCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLE9BQVg7QUFDRCxDQVJEO0FBVUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEdBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcb2JlZG9cXERvY3VtZW50c1xcR2l0SHViXFxmbG9yZW50aW5lQ29kZXhcXGZsb3JlbnRpbmVDb2RleFxcaW1hZ2VfdG9vbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJyk7XHJcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxudmFyIGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKTtcclxudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xyXG5cclxudmFyIGluZGV4Um91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvaW5kZXgnKTtcclxudmFyIHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKTtcclxudmFyIHJlZ2lvbnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9yZWdpb25zJyk7XHJcbnZhciBhbm5vdGF0aW9uc1JvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2Fubm90YXRpb25zJyk7XHJcblxyXG52YXIgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy8gdmlldyBlbmdpbmUgc2V0dXBcclxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XHJcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpO1xyXG5cclxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcclxuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XHJcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCBcIipcIik7XHJcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdHRVQsUFVULFBPU1QsREVMRVRFJyk7XHJcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUnKTtcclxuICBuZXh0KCk7XHJcbn0pO1xyXG5cclxuYXBwLnVzZSgnLycsIGluZGV4Um91dGVyKTtcclxuYXBwLnVzZSgnL3VzZXJzJywgdXNlcnNSb3V0ZXIpO1xyXG5hcHAudXNlKCcvcmVnaW9ucycsIHJlZ2lvbnNSb3V0ZXIpO1xyXG5hcHAudXNlKCcvYW5ub3RhdGlvbnMnLCBhbm5vdGF0aW9uc1JvdXRlcik7XHJcblxyXG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgbmV4dChjcmVhdGVFcnJvcig0MDQpKTtcclxufSk7XHJcblxyXG4vLyBlcnJvciBoYW5kbGVyXHJcbmFwcC51c2UoZnVuY3Rpb24oZXJyLCByZXEsIHJlcywgbmV4dCkge1xyXG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XHJcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XHJcbiAgcmVzLmxvY2Fscy5lcnJvciA9IHJlcS5hcHAuZ2V0KCdlbnYnKSA9PT0gJ2RldmVsb3BtZW50JyA/IGVyciA6IHt9O1xyXG5cclxuICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcclxuICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcclxuICByZXMucmVuZGVyKCdlcnJvcicpO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "indexRouter",
        "usersRouter",
        "regionsRouter",
        "annotationsRouter",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "req",
        "res",
        "next",
        "header",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,kBAAD,CAA3B;;AACA,IAAIQ,iBAAiB,GAAGR,OAAO,CAAC,sBAAD,CAA/B;;AAEA,IAAIS,GAAG,GAAGR,OAAO,EAAjB,C,CAEA;;AACAQ,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBR,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AACAK,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQV,YAAY,EAApB;AACAM,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACgB,MAAR,CAAef,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAH,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,qBAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,cAA3C;AACAD,EAAAA,IAAI;AACL,CALD;AAOAX,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaR,WAAb;AACAI,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkBP,WAAlB;AACAG,GAAG,CAACI,GAAJ,CAAQ,UAAR,EAAoBN,aAApB;AACAE,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBL,iBAAxB,E,CAEA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACrB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAU,GAAG,CAACI,GAAJ,CAAQ,UAASS,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACI,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAL,EAAAA,GAAG,CAACI,MAAJ,CAAWE,KAAX,GAAmBP,GAAG,CAACT,GAAJ,CAAQiB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAH,EAAAA,GAAG,CAACQ,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAR,EAAAA,GAAG,CAACS,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBrB,GAAjB",
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\",
      "sourcesContent": [
        "var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar regionsRouter = require('./routes/regions');\r\nvar annotationsRouter = require('./routes/annotations');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\napp.use(function(req, res, next) {\r\n  res.header('Access-Control-Allow-Origin', \"*\");\r\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\r\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\r\n  next();\r\n});\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/regions', regionsRouter);\r\napp.use('/annotations', annotationsRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611869536446
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"filename\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\routes\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXG9iZWRvXFxEb2N1bWVudHNcXEdpdEh1YlxcZmxvcmVudGluZUNvZGV4XFxmbG9yZW50aW5lQ29kZXhcXGltYWdlX3Rvb2xzXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbi8qIEdFVCBob21lIHBhZ2UuICovXHJcbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gIHJlcy5yZW5kZXIoJ2luZGV4JywgeyB0aXRsZTogJ0V4cHJlc3MnIH0pO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
      "sourcesContent": [
        "var express = require('express');\r\nvar router = express.Router();\r\n\r\n/* GET home page. */\r\nrouter.get('/', function(req, res, next) {\r\n  res.render('index', { title: 'Express' });\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611869536678
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"filename\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\routes\\\\users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7QUFFQTs7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3ZDRCxFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyx5QkFBVDtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXG9iZWRvXFxEb2N1bWVudHNcXEdpdEh1YlxcZmxvcmVudGluZUNvZGV4XFxmbG9yZW50aW5lQ29kZXhcXGltYWdlX3Rvb2xzXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbi8qIEdFVCB1c2VycyBsaXN0aW5nLiAqL1xyXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICByZXMuc2VuZCgncmVzcG9uZCB3aXRoIGEgcmVzb3VyY2UnKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
      "sourcesContent": [
        "var express = require('express');\r\nvar router = express.Router();\r\n\r\n/* GET users listing. */\r\nrouter.get('/', function(req, res, next) {\r\n  res.send('respond with a resource');\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611869536678
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"filename\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\\\\routes\\\\regions.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\obedo\\\\Documents\\\\GitHub\\\\florentineCodex\\\\florentineCodex\\\\image_tools\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\regions.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\regions.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\regions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
        "sourceFileName": "regions.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst low = require('lowdb');\n\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\ndb.defaults({\n  annotations: []\n}).write();\n/* add an annotation. */\n\nrouter.post('/', function (req, res, next) {\n  const newAnno = {\n    id: req.body['@id'],\n    content: req.body,\n    target_canvas: req.body.on[0].full,\n    within: req.body.on[0].within['@id']\n  };\n  const result = db.get('annotations').push(newAnno).write().find(anno => anno.id === newAnno.id);\n  res.send(result);\n});\n/* GET all annotations. */\n\nrouter.get('/', function (req, res, next) {\n  // If there are query parameters, look for\n  // annotations on a specific canvas.\n  if (req.query.target_canvas) {\n    const target_canvas = decodeURIComponent(req.query.target_canvas);\n    const result = db.get('annotations').value().filter(annotation => {\n      return annotation.target_canvas ? annotation.target_canvas === target_canvas : false;\n    }).map(anno => anno.content);\n    res.send(result);\n    return;\n  }\n\n  const result = db.get('annotations');\n  res.send(result);\n});\n/* GET annotations with a specific ID */\n\nrouter.get('/:uid', function (req, res, next) {\n  const id = req.params.uid; // select the canvas id out of the get query parameter\n\n  const result = db.get('annotations').find(anno => anno.id === id).value();\n  res.send(result);\n});\n/* update annotation. */\n\nrouter.put('/:uid', function (req, res, next) {\n  const id = req.params.uid;\n  const newAnno = {\n    id: req.body['@id'],\n    content: req.body,\n    target_canvas: req.body.on[0].full,\n    within: req.body.on[0].within['@id']\n  }; // select the annotation id out of the query parameters\n\n  const result = db.get('annotations').find({\n    id: id\n  }).assign(newAnno).write();\n  res.send(result);\n});\n/* delete annotation. */\n\nrouter.delete('/:uid', function (req, res, next) {\n  const id = req.params.uid; // select out the annotation ID to address it\n\n  const result = db.get('annotations').remove({\n    id: id\n  }).write();\n  res.send(result);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lvbnMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJsb3ciLCJGaWxlU3luYyIsImFkYXB0ZXIiLCJkYiIsImRlZmF1bHRzIiwiYW5ub3RhdGlvbnMiLCJ3cml0ZSIsInBvc3QiLCJyZXEiLCJyZXMiLCJuZXh0IiwibmV3QW5ubyIsImlkIiwiYm9keSIsImNvbnRlbnQiLCJ0YXJnZXRfY2FudmFzIiwib24iLCJmdWxsIiwid2l0aGluIiwicmVzdWx0IiwiZ2V0IiwicHVzaCIsImZpbmQiLCJhbm5vIiwic2VuZCIsInF1ZXJ5IiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidmFsdWUiLCJmaWx0ZXIiLCJhbm5vdGF0aW9uIiwibWFwIiwicGFyYW1zIiwidWlkIiwicHV0IiwiYXNzaWduIiwiZGVsZXRlIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiOztBQUNBLE1BQU1DLEdBQUcsR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsTUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMseUJBQUQsQ0FBeEI7O0FBQ0EsTUFBTUssT0FBTyxHQUFHLElBQUlELFFBQUosQ0FBYSxTQUFiLENBQWhCO0FBQ0EsTUFBTUUsRUFBRSxHQUFHSCxHQUFHLENBQUNFLE9BQUQsQ0FBZDtBQUVBQyxFQUFFLENBQUNDLFFBQUgsQ0FBWTtBQUFFQyxFQUFBQSxXQUFXLEVBQUU7QUFBZixDQUFaLEVBQ0dDLEtBREg7QUFHQTs7QUFDQVIsTUFBTSxDQUFDUyxJQUFQLENBQVksR0FBWixFQUFpQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3hDLFFBQU1DLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxFQUFFLEVBQUVK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OztBQUNBLFFBQU1DLE1BQU0sR0FBR2hCLEVBQUUsQ0FBQ2lCLEdBQUgsQ0FBTyxhQUFQLEVBQ1JFLElBRFEsQ0FDSDtBQUFFVixJQUFBQSxFQUFFLEVBQUVBO0FBQU4sR0FERyxFQUVSc0IsTUFGUSxDQUVEdkIsT0FGQyxFQUdaTCxLQUhZLEVBQWY7QUFLQUcsRUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNMLE1BQVQ7QUFDRCxDQWhCRDtBQWtCQTs7QUFDQXJCLE1BQU0sQ0FBQ3FDLE1BQVAsQ0FBYyxPQUFkLEVBQXVCLFVBQVMzQixHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQzlDLFFBQU1FLEVBQUUsR0FBR0osR0FBRyxDQUFDdUIsTUFBSixDQUFXQyxHQUF0QixDQUQ4QyxDQUU5Qzs7QUFDQSxRQUFNYixNQUFNLEdBQUdoQixFQUFFLENBQUNpQixHQUFILENBQU8sYUFBUCxFQUFzQmdCLE1BQXRCLENBQTZCO0FBQUV4QixJQUFBQSxFQUFFLEVBQUVBO0FBQU4sR0FBN0IsRUFBeUNOLEtBQXpDLEVBQWY7QUFDQUcsRUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNMLE1BQVQ7QUFDRCxDQUxEO0FBT0FrQixNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QyxNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXG9iZWRvXFxEb2N1bWVudHNcXEdpdEh1YlxcZmxvcmVudGluZUNvZGV4XFxmbG9yZW50aW5lQ29kZXhcXGltYWdlX3Rvb2xzXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgbG93ID0gcmVxdWlyZSgnbG93ZGInKTtcclxuY29uc3QgRmlsZVN5bmMgPSByZXF1aXJlKCdsb3dkYi9hZGFwdGVycy9GaWxlU3luYycpO1xyXG5jb25zdCBhZGFwdGVyID0gbmV3IEZpbGVTeW5jKCdkYi5qc29uJyk7XHJcbmNvbnN0IGRiID0gbG93KGFkYXB0ZXIpO1xyXG5cclxuZGIuZGVmYXVsdHMoeyBhbm5vdGF0aW9uczogW10gfSlcclxuICAud3JpdGUoKTtcclxuXHJcbi8qIGFkZCBhbiBhbm5vdGF0aW9uLiAqL1xyXG5yb3V0ZXIucG9zdCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgY29uc3QgbmV3QW5ubyA9IHtcclxuICAgIGlkOiByZXEuYm9keVsnQGlkJ10sXHJcbiAgICBjb250ZW50OiByZXEuYm9keSxcclxuICAgIHRhcmdldF9jYW52YXM6IHJlcS5ib2R5Lm9uWzBdLmZ1bGwsXHJcbiAgICB3aXRoaW46IHJlcS5ib2R5Lm9uWzBdLndpdGhpblsnQGlkJ11cclxuICB9O1xyXG4gIGNvbnN0IHJlc3VsdCA9IGRiLmdldCgnYW5ub3RhdGlvbnMnKVxyXG4gICAgICAgIC5wdXNoKG5ld0Fubm8pXHJcbiAgICAgICAgLndyaXRlKCkuZmluZChhbm5vID0+IGFubm8uaWQgPT09IG5ld0Fubm8uaWQpO1xyXG5cclxuICByZXMuc2VuZChyZXN1bHQpO1xyXG59KTtcclxuXHJcbi8qIEdFVCBhbGwgYW5ub3RhdGlvbnMuICovXHJcbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gIC8vIElmIHRoZXJlIGFyZSBxdWVyeSBwYXJhbWV0ZXJzLCBsb29rIGZvclxyXG4gIC8vIGFubm90YXRpb25zIG9uIGEgc3BlY2lmaWMgY2FudmFzLlxyXG4gIGlmIChyZXEucXVlcnkudGFyZ2V0X2NhbnZhcykge1xyXG4gICAgY29uc3QgdGFyZ2V0X2NhbnZhcyA9IGRlY29kZVVSSUNvbXBvbmVudChyZXEucXVlcnkudGFyZ2V0X2NhbnZhcyk7XHJcbiAgICBjb25zdCByZXN1bHQgPSBkYi5nZXQoJ2Fubm90YXRpb25zJykudmFsdWUoKS5maWx0ZXIoYW5ub3RhdGlvbiA9PiB7XHJcbiAgICAgIHJldHVybiBhbm5vdGF0aW9uLnRhcmdldF9jYW52YXMgP1xyXG4gICAgICAgIChhbm5vdGF0aW9uLnRhcmdldF9jYW52YXMgPT09IHRhcmdldF9jYW52YXMpIDogZmFsc2U7XHJcbiAgICB9KS5tYXAoYW5ubyA9PiBhbm5vLmNvbnRlbnQpO1xyXG5cclxuICAgIHJlcy5zZW5kKHJlc3VsdCk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCByZXN1bHQgPSBkYi5nZXQoJ2Fubm90YXRpb25zJyk7XHJcbiAgcmVzLnNlbmQocmVzdWx0KTtcclxufSk7XHJcblxyXG4vKiBHRVQgYW5ub3RhdGlvbnMgd2l0aCBhIHNwZWNpZmljIElEICovXHJcbnJvdXRlci5nZXQoJy86dWlkJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICBjb25zdCBpZCA9IHJlcS5wYXJhbXMudWlkO1xyXG5cclxuICAvLyBzZWxlY3QgdGhlIGNhbnZhcyBpZCBvdXQgb2YgdGhlIGdldCBxdWVyeSBwYXJhbWV0ZXJcclxuICBjb25zdCByZXN1bHQgPSBkYi5nZXQoJ2Fubm90YXRpb25zJykuZmluZChhbm5vID0+IGFubm8uaWQgPT09IGlkKS52YWx1ZSgpO1xyXG4gIHJlcy5zZW5kKHJlc3VsdCk7XHJcbn0pO1xyXG5cclxuXHJcbi8qIHVwZGF0ZSBhbm5vdGF0aW9uLiAqL1xyXG5yb3V0ZXIucHV0KCcvOnVpZCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgY29uc3QgaWQgPSByZXEucGFyYW1zLnVpZDtcclxuICBjb25zdCBuZXdBbm5vID0ge1xyXG4gICAgaWQ6IHJlcS5ib2R5WydAaWQnXSxcclxuICAgIGNvbnRlbnQ6IHJlcS5ib2R5LFxyXG4gICAgdGFyZ2V0X2NhbnZhczogcmVxLmJvZHkub25bMF0uZnVsbCxcclxuICAgIHdpdGhpbjogcmVxLmJvZHkub25bMF0ud2l0aGluWydAaWQnXVxyXG4gIH07XHJcblxyXG4gIC8vIHNlbGVjdCB0aGUgYW5ub3RhdGlvbiBpZCBvdXQgb2YgdGhlIHF1ZXJ5IHBhcmFtZXRlcnNcclxuICBjb25zdCByZXN1bHQgPSBkYi5nZXQoJ2Fubm90YXRpb25zJylcclxuICAgICAgICAuZmluZCh7IGlkOiBpZCB9KVxyXG4gICAgICAgIC5hc3NpZ24obmV3QW5ubylcclxuICAgIC53cml0ZSgpO1xyXG5cclxuICByZXMuc2VuZChyZXN1bHQpO1xyXG59KTtcclxuXHJcbi8qIGRlbGV0ZSBhbm5vdGF0aW9uLiAqL1xyXG5yb3V0ZXIuZGVsZXRlKCcvOnVpZCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgY29uc3QgaWQgPSByZXEucGFyYW1zLnVpZDtcclxuICAvLyBzZWxlY3Qgb3V0IHRoZSBhbm5vdGF0aW9uIElEIHRvIGFkZHJlc3MgaXRcclxuICBjb25zdCByZXN1bHQgPSBkYi5nZXQoJ2Fubm90YXRpb25zJykucmVtb3ZlKHsgaWQ6IGlkIH0pLndyaXRlKCk7XHJcbiAgcmVzLnNlbmQocmVzdWx0KTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "regions.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "low",
        "FileSync",
        "adapter",
        "db",
        "defaults",
        "annotations",
        "write",
        "post",
        "req",
        "res",
        "next",
        "newAnno",
        "id",
        "body",
        "content",
        "target_canvas",
        "on",
        "full",
        "within",
        "result",
        "get",
        "push",
        "find",
        "anno",
        "send",
        "query",
        "decodeURIComponent",
        "value",
        "filter",
        "annotation",
        "map",
        "params",
        "uid",
        "put",
        "assign",
        "delete",
        "remove",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\obedo\\Documents\\GitHub\\florentineCodex\\florentineCodex\\image_tools\\routes\\",
      "sourcesContent": [
        "var express = require('express');\r\nvar router = express.Router();\r\nconst low = require('lowdb');\r\nconst FileSync = require('lowdb/adapters/FileSync');\r\nconst adapter = new FileSync('db.json');\r\nconst db = low(adapter);\r\n\r\ndb.defaults({ annotations: [] })\r\n  .write();\r\n\r\n/* add an annotation. */\r\nrouter.post('/', function(req, res, next) {\r\n  const newAnno = {\r\n    id: req.body['@id'],\r\n    content: req.body,\r\n    target_canvas: req.body.on[0].full,\r\n    within: req.body.on[0].within['@id']\r\n  };\r\n  const result = db.get('annotations')\r\n        .push(newAnno)\r\n        .write().find(anno => anno.id === newAnno.id);\r\n\r\n  res.send(result);\r\n});\r\n\r\n/* GET all annotations. */\r\nrouter.get('/', function(req, res, next) {\r\n  // If there are query parameters, look for\r\n  // annotations on a specific canvas.\r\n  if (req.query.target_canvas) {\r\n    const target_canvas = decodeURIComponent(req.query.target_canvas);\r\n    const result = db.get('annotations').value().filter(annotation => {\r\n      return annotation.target_canvas ?\r\n        (annotation.target_canvas === target_canvas) : false;\r\n    }).map(anno => anno.content);\r\n\r\n    res.send(result);\r\n    return;\r\n  }\r\n\r\n  const result = db.get('annotations');\r\n  res.send(result);\r\n});\r\n\r\n/* GET annotations with a specific ID */\r\nrouter.get('/:uid', function(req, res, next) {\r\n  const id = req.params.uid;\r\n\r\n  // select the canvas id out of the get query parameter\r\n  const result = db.get('annotations').find(anno => anno.id === id).value();\r\n  res.send(result);\r\n});\r\n\r\n\r\n/* update annotation. */\r\nrouter.put('/:uid', function(req, res, next) {\r\n  const id = req.params.uid;\r\n  const newAnno = {\r\n    id: req.body['@id'],\r\n    content: req.body,\r\n    target_canvas: req.body.on[0].full,\r\n    within: req.body.on[0].within['@id']\r\n  };\r\n\r\n  // select the annotation id out of the query parameters\r\n  const result = db.get('annotations')\r\n        .find({ id: id })\r\n        .assign(newAnno)\r\n    .write();\r\n\r\n  res.send(result);\r\n});\r\n\r\n/* delete annotation. */\r\nrouter.delete('/:uid', function(req, res, next) {\r\n  const id = req.params.uid;\r\n  // select out the annotation ID to address it\r\n  const result = db.get('annotations').remove({ id: id }).write();\r\n  res.send(result);\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1611869536678
  }
}